#!/usr/bin/env python# -*- coding: utf-8 -*-from Queue import Queue  import threading  import time  class Consumer(threading.Thread):      def __init__(self, t_name, queue,cond):          threading.Thread.__init__(self, name=t_name)          self.data=queue           self.condition = cond    def run(self):        while(True):            self.condition.acquire()            if not self.data.empty():                  xtmp = self.data.get()                print 'size thread=',self.data.qsize()                print 'qeue=%d'%(xtmp)        self.condition.release()   #Main thread  def main():      queue = Queue()      con = threading.Condition()    consumer = Consumer('Con.', queue,con)      consumer.setDaemon(True)    consumer.start()    while(True):        time.sleep(2)        if queue.empty():            queue.put(99)            queue.put(98)            queue.put(97)            print 'size main=',queue.qsize()            print 'xxxx'            print 'All threads terminate!'  if __name__ == '__main__':      main()